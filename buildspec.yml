version: 0.2
phases:
  install:
    commands:
      - echo Installing jq for JSON parsing...
      - yum install -y jq
  pre_build:
    commands:
      - echo Logging into Docker Hub on $(date)
      - CREDENTIALS=$(aws secretsmanager get-secret-value --secret-id dockerhub/credentials --query SecretString --output text)
      - export DOCKER_USERNAME=$(echo $CREDENTIALS | jq -r .username)
      - export DOCKER_PASSWORD=$(echo $CREDENTIALS | jq -r .password)
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - echo Docker Hub login complete
      - echo Logging into Amazon ECR...
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 583796145106.dkr.ecr.us-east-2.amazonaws.com
      - echo Setting repository URI and image tag...
      - REPOSITORY_URI=583796145106.dkr.ecr.us-east-2.amazonaws.com/ecommercepipeline
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Building Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Pushing Docker images to ECR...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing imagedefinitions.json for deployment...
      - DOCKER_CONTAINER_NAME=cicdcontainer
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
